generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  nom          String
  email        String        @unique
  telephone    String
  password     String
  role         String        @default("client")

  cars         Car[]         
  reservations Reservation[] 
  tickets      Ticket[]      

  // relation existante, on la laisse pour la migration
  abonnements  Abonnement[]  
}

model Car {
  id                    Int            @id @default(autoincrement())
  marque                String
  modele                String
  annee                 Int
  plaqueImmatriculation String
  dateEntree            DateTime
  statut                String
  clientId              Int
  user                  User           @relation(fields: [clientId], references: [id])

  reservations          Reservation[]
  tickets               Ticket[]

  // relation existante, on la laisse pour la migration
  abonnements           Abonnement[]   
}

model Abonnement {
  id        Int      @id @default(autoincrement())
  dateDebut DateTime
  dateFin   DateTime
  type      String

  // on rend temporairement optionnel pour que la colonne puisse être ajoutée sans valeur par défaut
  clientId  Int?     
  user      User?    @relation(fields: [clientId], references: [id])

  // nouveau champ, nullable le temps de backfiller
  carId     Int?     
  car       Car?     @relation(fields: [carId], references: [id])
}

model Ticket {
  id             Int      @id @default(autoincrement())
  type           String
  message        String
  adminResponse  String?
  clientResponse String?
  dateCreation   DateTime @default(now())
  statut         String   @default("En attente")

  voitureId      Int
  clientId       Int

  car            Car      @relation(fields: [voitureId], references: [id])
  user           User     @relation(fields: [clientId], references: [id])
}

model Reservation {
  id        Int      @id @default(autoincrement())
  dateHeure DateTime
  statut    String   @default("En attente")
  commentaire String?
  voitureId Int
  clientId  Int
  car       Car      @relation(fields: [voitureId], references: [id])
  user      User     @relation(fields: [clientId], references: [id])
}
